{"version":3,"file":"static/js/915.03f395df.chunk.js","mappings":"0OA6BMA,GA1BgBC,EAAAA,EAAAA,IAAH,oIAQDA,EAAAA,EAAAA,MAAH,0GAMIA,EAAAA,EAAAA,OAAH,uOAYEA,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,oLAWTE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,2D,0KClCI,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,MAAdD,UAMR,OACE,SAAC,KAAD,CACEE,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAZiB,SAAC,EAAD,GAA+C,IAA5CH,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcE,EAAgB,EAAhBA,UACjDT,EAASU,EAAAA,EAAAA,SAAwB,CAAEL,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KAChDI,QAAQC,IAAI,CAAEP,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,IAC3BE,GACD,EAEC,SAQG,SAAAI,GAAK,OACJ,SAAC,IAAD,CACEC,GAAkB,SAAdZ,EAAuB,UAAY,WACvCa,MAAM,SACNC,QAAQ,SACRC,EAAE,OAJJ,UAME,SAAC,KAAD,CACEH,GAAkB,SAAdZ,EAAuB,WAAa,QACxCgB,EAAG,EACHC,QAAQ,KACRC,EAAG,GAJL,UAME,UAAC,KAAD,CAAMC,aAAa,MAAnB,WACE,UAAC,IAAD,CAAWC,QAAQ,OAAOC,MAAM,OAAhC,kBAEE,SAAC,KAAD,CAAWC,KAAK,OAAOnB,KAAK,UAC5B,SAAC,KAAD,CAAcA,KAAK,OAAOoB,UAAU,YAEtC,UAAC,IAAD,CAAWH,QAAQ,QAAQC,MAAM,OAAjC,mBAEE,SAAC,KAAD,CAAWC,KAAK,QAAQnB,KAAK,WAC7B,SAAC,KAAD,CAAcA,KAAK,QAAQoB,UAAU,YAEvC,UAAC,IAAD,CAAWH,QAAQ,WAAWC,MAAM,OAApC,sBAEE,SAAC,KAAD,CAAWC,KAAK,WAAWnB,KAAK,cAChC,SAAC,KAAD,CAAcA,KAAK,WAAWoB,UAAU,YAE1C,SAAC,IAAD,CACEC,GAAI,EACJC,YAAY,OACZC,UAAWf,EAAMgB,aACjBL,KAAK,SAJP,4BA7BF,GA2CX,CC/Dc,SAASM,IACtB,OACE,0BACE,SAAC/B,EAAD,KAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  border: 1px solid black;\n  padding: 15px;\n`;\n\nconst FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 20px;\n`;\nconst FormButton = styled.button`\n  padding: 5px 10px;\n  cursor: pointer;\n  border: 1px solid transparent;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    background-color: blue;\n  }\n`;\n\nconst FormField = styled(Field)`\n  padding-left: 2px;\n  border: 1px solid teal;\n  &:hover,\n  &:focus {\n    border: 2px solid 234e52;\n  }\n  color: black;\n  background-color: white;\n`;\n\nconst Error = styled(ErrorMessage)`\n  font-size: 12px;\n  color: blue;\n`;\n\nexport { FormContainer, FormLabel, FormButton, FormField, Error };\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport authOperations from 'Redux/auth/auth-operations';\nimport { Flex, Box, Button, FormLabel, useColorMode } from '@chakra-ui/react';\nimport { FormField } from 'components/ContactForm/ContactForm.styled';\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n  const { colorMode } = useColorMode();\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(authOperations.register({ name, email, password }));\n    console.log({ name, email, password });\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      {props => (\n        <Flex\n          bg={colorMode === 'dark' ? '#234E52' : 'gray.100'}\n          align=\"center\"\n          justify=\"center\"\n          h=\"80vh\"\n        >\n          <Box\n            bg={colorMode === 'dark' ? 'gray.100' : 'white'}\n            p={6}\n            rounded=\"md\"\n            w={64}\n          >\n            <Form autoComplete=\"off\">\n              <FormLabel htmlFor=\"name\" color=\"teal\">\n                Name\n                <FormField type=\"text\" name=\"name\" />\n                <ErrorMessage name=\"name\" component=\"div\" />\n              </FormLabel>\n              <FormLabel htmlFor=\"email\" color=\"teal\">\n                Email\n                <FormField type=\"email\" name=\"email\" />\n                <ErrorMessage name=\"email\" component=\"div\" />\n              </FormLabel>\n              <FormLabel htmlFor=\"password\" color=\"teal\">\n                Password\n                <FormField type=\"password\" name=\"password\" />\n                <ErrorMessage name=\"password\" component=\"div\" />\n              </FormLabel>\n              <Button\n                mt={4}\n                colorScheme=\"teal\"\n                isLoading={props.isSubmitting}\n                type=\"submit\"\n              >\n                Register\n              </Button>\n            </Form>\n          </Box>\n        </Flex>\n      )}\n    </Formik>\n  );\n}\n","\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["FormField","styled","Field","Error","ErrorMessage","RegisterForm","dispatch","useDispatch","colorMode","useColorMode","initialValues","name","email","password","onSubmit","resetForm","authOperations","console","log","props","bg","align","justify","h","p","rounded","w","autoComplete","htmlFor","color","type","component","mt","colorScheme","isLoading","isSubmitting","Register"],"sourceRoot":""}